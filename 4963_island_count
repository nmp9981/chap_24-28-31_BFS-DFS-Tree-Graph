import sys 
sys.setrecursionlimit(99999) #재귀깊이 늘려줌(dps시 참고)

#dfs
def dfs(x,y):
  #탐색범위
  if x < 0 or x >= h or y < 0 or y >= w: #범위를 벗어나면
    return False
  
  if matrix[x][y] == 1: #1->0
    matrix[x][y] = 0
    for i in range(8):#8방향 탐색(대각선 포함)
      nx = x + dx[i]
      ny = y + dy[i]
      dfs(nx,ny)
    return True

#위치변수
dx = [0,0,-1,1,-1,-1,1,1]
dy = [-1,1,0,0,-1,1,-1,1]

#입력
while True:
  w,h = map(int, input().split())
  if w == 0 and h == 0:
    break
  else:
    #지도 입력
    matrix = []
    for i in range(h):
      p = list(map(int, input().split()))
      matrix.append(p)
  
    #지도 탐색(dfs)
    count = 0
    for i in range(h):
      for j in range(w):
        if dfs(i,j) == True:
          count += 1 #섬의 개수 증가
  
    #출력
    print(count)
