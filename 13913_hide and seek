#include <iostream>
#include <vector>
#include <cstring>
#include <queue>
using namespace std;

int n,k;
const int maxi = 200001;
bool visit[maxi];//방문 체크
int parent[maxi];//이전 노드가 무엇인가?
vector<int> ans;//정답 출력용

//입력
void input(){
    cin>>n>>k;
    //초기화
    memset(visit,false,sizeof(visit));
    for(int i=1;i<maxi;i++){
        parent[i] = i;
    }
}

//경로 찾기
void path(int y){
    ans.push_back(y);
    if(parent[y]==y){//끝까지 가면
        return;
    }
    path(parent[y]);//거슬러 올라간다.
}

//동생찾기
void bfs(){
    queue<pair<int,int>> q;
    q.push({n,0});//초기 지점
    visit[n] = true;//방문체크
    
    while(!q.empty()){
        int x = q.front().first;
        int t = q.front().second;
        q.pop();
        
        //도착
        if(x==k){
            cout<<t<<"\n";
            path(k);//경로찾기
            //출력
            for(int i=ans.size()-1;i>=0;i--){
                cout<<ans[i]<<" ";
            }
            return;
        }
        //+1
        if(x+1<maxi){
            if(visit[x+1]==false){
                visit[x+1] = true;//방문체크
                parent[x+1] = x;//이전노드
                q.push({x+1,t+1});
            }
        }
        //-1
        if(x-1>=0){
            if(visit[x-1]==false){
                visit[x-1] = true;//방문체크
                parent[x-1] = x;//이전노드
                q.push({x-1,t+1});
            }
        }
        //*2
        if(2*x<maxi){
            if(visit[2*x]==false){
                visit[2*x] = true;//방문체크
                parent[2*x] = x;//이전노드
                q.push({2*x,t+1});
            }
        }
    }
}
int main(){
    input();//입력
    bfs();//동생 찾기
    return 0;
}
