#include <iostream>
#include <string>
#include <vector>
#include <algorithm>
#include <cstring>
#include <cmath>
#include <queue>
using namespace std;

const int maxi = 501;
const int inf = 8000000;
int dp[maxi][maxi];//플로이드 알고리즘 결과
int know[maxi];//비교 가능한 사람수
int n,m,cnt_col,cnt_row,cnt;

//입력
void input(){
    cin>>n>>m;
    //초기화
    for(int i=1;i<=n;i++){
        for(int j=1;j<=n;j++){
            if(i==j){
                dp[i][j] = 0;
            }else{
                dp[i][j] = inf;
            }
        }
    }
    //입력하기
    for(int i=0;i<m;i++){
        int a,b;
        cin>>a>>b;
        dp[a][b] = 10;//계산을 위해 임의의 값을 넣어줌
    }
}

//플로이드
void floyd(){
    for(int k=1;k<=n;k++){//경유점
        for(int i=1;i<=n;i++){
            for(int j=1;j<=n;j++){
                //그냥 가는것이 좋은가? 
                //아니면 경유해서 가는것이 더 좋은가?
                dp[i][j] = min(dp[i][j],dp[i][k]+dp[k][j]);
            }
        }
    }
}

//검사하기
void inspect(){
    //행 검사
    for(int i=1;i<=n;i++){
        cnt_row = 0;
        for(int j=1;j<=n;j++){
            if(dp[i][j]>0 && dp[i][j]<inf){
                cnt_row++;
            }
        }
        know[i] = cnt_row;
    }
    //열 검사
    for(int j=1;j<=n;j++){
        cnt_col = 0;
        for(int i=1;i<=n;i++){
            if(dp[i][j]>0 && dp[i][j]<inf){
                cnt_col++;
            }
        }
        know[j] += cnt_col;
    }
    cnt = 0;
    //총 개수
    for(int i=1;i<=n;i++){
        if(know[i]==n-1){//본인 제외 n-1명의 사람과 비교 가능
            cnt++;
        }
    }
    cout<<cnt;
}

int main(){
    input();//입력
    floyd();//플로이드 알고리즘
    inspect();//검사하기
    return 0;
}
