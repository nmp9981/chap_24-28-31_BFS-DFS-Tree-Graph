import sys 
from collections import deque

#입력
n, m = map(int, input().split()) #정점 개수, 선 개수

#인접행렬생성
matrix = [[0]*(n+1) for i in range(n+1)]
for i in range(m):
  from_n, to_n = map(int, input().split())
  matrix[from_n][to_n] = matrix[to_n][from_n] = 1

#방문노드
visit = [0 for i in range(n+1)]
'''
#dfs
def dfs(start_node):
  visit[start_node] = 1
  for i in range(1,n+1):
    if visit[i] == 0 and matrix[start_node][i] == 1:
      dfs(i)
  
  return visit
'''
#bfs
def bfs(start_node):
  queue = [start_node]
  visit[start_node] = 1
  while queue:
    start_node = queue.pop(0)
    for i in range(1,n+1):
      if visit[i] == 0 and matrix[start_node][i] == 1:
        queue.append(i)
        visit[i] = 1
  return visit

count = 0 #연결 요소의 개수
for i in range(1,n+1): #1번 노드부터 시작
  if visit[i] == 0: #아직 방문을 안한 노드가 있다면
    visit = bfs(i)
    count += 1 #연결노드 세트 개수 추가

#출력
print(count)
