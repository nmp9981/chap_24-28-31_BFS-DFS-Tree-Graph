import sys
sys.setrecursionlimit(99999999) #재귀 깊이 늘려줌 

#dfs
def dfs(x,result):
  for i in range(len(matrix[x])):
    end,dis = matrix[x][i]
    if result[end] == 0: #아직 미방문
      result[end] = result[x] + dis #이전노드 + 거리
      dfs(end, result)

#입력
n = int(input())
matrix = [[] for i in range(n+1)]
#트리구현
for i in range(n):
  path = list(map(int, input().split()))
  #1+2*n
  l = len(path)
  for i in range(1,l//2):
    matrix[path[0]].append([path[2*i-1],path[2*i]])
  
#방문노드
result1 = [0]*(n+1)
result2 = [0]*(n+1)

#dfs
dfs(1,result1) #한노드를 정하고 가장 깊은 노드 탐색
result1[1] = 0
#가장 깊은 노드
maxi = 0
index = 0

#가장 깊은 노드의 인덱스 구하기
for i in range(len(result1)):
  if maxi < result1[i]:
    maxi = result1[i]
    index = i

#해당노드에서 가장 깊은 노드
dfs(index,result2)
result2[index] = 0
print(max(result2))
