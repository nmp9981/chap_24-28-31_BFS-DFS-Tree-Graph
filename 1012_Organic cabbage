import sys 
sys.setrecursionlimit(10**6) #재귀깊이 늘려줌(dps시 참고)
from collections import deque

#dfs
def dfs(x,y):
  #탐색범위를 벗어난 경우
  if x < 0 or x >= n or y < 0 or y >= m:
    return False

  if matrix[x][y] == 1: #배추 1 -> 0
    matrix[x][y] = 0
    for i in range(4): #동서남북탐색
      nx = x + dx[i]
      ny = y + dy[i]
      dfs(nx,ny)
    return True

#입력
t = int(input())

#위치변수
dx = [0,0,1,-1]
dy = [1,-1,0,0]

#위치입력
for j in range(t):
  #입력
  m,n,k = map(int, input().split())
  #밭 초기화
  matrix = [[0]*50 for i in range(50)]
  count = 0
  #밭 생성
  for i in range(k):
    from_n,to_n = map(int, input().split())
    matrix[to_n][from_n] = 1 #왜 반대로 입력해야하는가?

  #덩어리 수 구하기
  for i in range(n):
    for j in range(m):
      if dfs(i,j) == True:
        count += 1

  #출력 
  print(count)
