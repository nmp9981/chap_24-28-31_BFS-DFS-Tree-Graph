#include <iostream>
#include <cstring>
#include <cmath>
#include <cctype>
#include <algorithm>
#include <vector>
#include <chrono>
#include <stack>
#include <queue>
#include <deque>
#include <utility>
#include <set>

using namespace std;//이름공간 선언
using namespace chrono;
int n,m;
int map[8][8];//원본
int dx[] = {-1,1,0,0};//x축 이동
int dy[] = {0,0,-1,1};//y축 이동

//감시카메라
void cctv(int c,int x,int y){
    if(c==1){
        int idx_1 = 0;//회전 각도
        int cnt_1 = 0;//바꾸는 최대 칸수
        for(int i=0;i<4;i++){
            int cnt = 0;
            //다음지점 탐색
            int nx = x + dx[i];
            int ny = y + dy[i];
            while(map[nx][ny]!=6 && nx>=0 && nx<n && ny>=0 && ny<m){
                if(map[nx][ny]==0){
                    cnt++;
                }
                nx += dx[i];
                ny += dy[i];
            }
            //회전각도, 바꾸는 칸수 결정
            if(cnt>cnt_1){
                idx_1 = i;
                cnt_1 = cnt;
            }
        }
        //맵수정
        int nx = x + dx[idx_1];
        int ny = y + dy[idx_1];
        while(map[nx][ny]!=6 && nx>=0 && nx<n && ny>=0 && ny<m){
            if(map[nx][ny]==0){
                map[nx][ny] = 7;//감시카메라가 지나간 길
            }
            nx += dx[idx_1];
            ny += dy[idx_1];
        }
        
    }else if(c==2){
        int cnt_2_x = 0;
        int cnt_2_y = 0;
        for(int i=0;i<2;i++){
            //다음지점 탐색
            int nx = x + dx[i];
            while(map[nx][y]!=6 && nx>=0 && nx<n){
                if(map[nx][y]==0){
                    cnt_2_x++;
                }
                nx += dx[i];
            }
        }
        for(int i=2;i<4;i++){
            //다음지점 탐색
            int ny = y + dy[i];
            while(map[x][ny]!=6 && ny>=0 && ny<m){
                if(map[x][ny]==0){
                    cnt_2_y++;
                }
                ny += dy[i];
            }
        }
        //맵수정
        if(cnt_2_x>=cnt_2_y){
            for(int i=0;i<2;i++){
                int nx = x + dx[i];
                while(map[nx][y]!=6 && nx>=0 && nx<n){
                    if(map[nx][y]==0){
                        map[nx][y] = 7;//감시카메라가 지나간 길
                    }
                    nx += dx[i];
                }
            }
        }else{
            for(int i=2;i<4;i++){
                int ny = y + dy[i];
                while(map[x][ny]!=6 && ny>=0 && ny<m){
                    if(map[x][ny]==0){
                        map[x][ny] = 7;//감시카메라가 지나간 길
                    }
                    ny += dy[i];
                }
            }
        }
    }else if(c==3){
        int idx_3_x = 0;//회전 각도
        int idx_3_y = 0;
        int cnt_3 = 0;//바꾸는 최소 칸수
        for(int i=0;i<2;i++){
            for(int j=2;j<4;j++){
                int cnt = 0;
                //다음지점 탐색
                int nx = x + dx[i];
                int ny = y + dy[j];
                while(map[nx][ny]!=6 && nx>=0 && nx<n && ny>=0 && ny<m){
                    if(map[nx][ny]==0){
                        cnt++;
                    }
                    nx += dx[i];
                    ny += dy[j];
                }
                //회전각도, 바꾸는 칸수 결정
                if(cnt>cnt_3){
                    idx_3_x = i;
                    idx_3_y = j;
                    cnt_3 = cnt;
                }
            }
        }
        //맵수정
        int nx = x + dx[idx_3_x];
        int ny = y + dy[idx_3_y];
        while(map[nx][ny]!=6 && nx>=0 && nx<n && ny>=0 && ny<m){
            if(map[nx][ny]==0){
                map[nx][ny] = 7;//감시카메라가 지나간 길
            }
            nx += dx[idx_3_x];
            ny += dy[idx_3_y];
        }
        
    }else if(c==4){
        int idx_4 = 0;//회전 각도
        int cnt_4 = 65;//바꾸는 최소 칸수
        for(int i=0;i<4;i++){
            int cnt = 0;
            //다음지점 탐색
            int nx = x + dx[i];
            int ny = y + dy[i];
            while(map[nx][ny]!=6 && nx>=0 && nx<n && ny>=0 && ny<m){
                if(map[nx][ny]==0){
                    cnt++;
                }
                nx += dx[i];
                ny += dy[i];
            }
            //회전각도, 바꾸는 칸수 결정
            if(cnt<cnt_4){
                idx_4 = i;
                cnt_4 = cnt;
            }
        }
        //맵수정
        for(int i=0;i<4;i++){
            if(i==idx_4){
                continue;
            }
            int nx = x + dx[i];
            int ny = y + dy[i];
            while(map[nx][ny]!=6 && nx>=0 && nx<n && ny>=0 && ny<m){
                if(map[nx][ny]==0){
                    map[nx][ny] = 7;//감시카메라가 지나간 길
                }
                nx += dx[i];
                ny += dy[i];
            }
        }
    }else if(c==5){
        //맵수정
        for(int i=0;i<4;i++){
            int nx = x + dx[i];
            int ny = y + dy[i];
            while(map[nx][ny]!=6 && nx>=0 && nx<n && ny>=0 && ny<m){
                if(map[nx][ny]==0){
                    map[nx][ny] = 7;//감시카메라가 지나간 길
                }
                nx += dx[i];
                ny += dy[i];
            }
        }
    }
}
//입력
void input(){
    cin>>n>>m;
    for(int i=0;i<n;i++){
        for(int j=0;j<m;j++){
            cin>>map[i][j];
        }
    }
}

//map 탐색
void search(){
    for(int i=0;i<n;i++){
        for(int j=0;j<m;j++){
            //cctv가 있다면
            if(map[i][j]>=1 && map[i][j]<=5){
                int c = map[i][j];
                cctv(c,i,j);
            }
        }
    }
    
    //사각지대의 크기
    int hide = 0;
    for(int i=0;i<n;i++){
        for(int j=0;j<m;j++){
            if(map[i][j]==0){
                hide++;
            }
        }
    }
    cout<<hide;//결과
}

int main(){
    cin.tie(0);
    cout.tie(0);
    
    input();//입력
    search();//map 탐색
    return 0;
}
